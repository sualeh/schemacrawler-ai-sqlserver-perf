name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: schemacrawler/schemacrawler-ai-sqlserver-perf

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - id: checkout
      name: Checkout repository
      uses: actions/checkout@v4

    - id: setup-python
      name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - id: install-poetry
      name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - id: install-deps
      name: Install dependencies
      run: |
        poetry install

    - id: check-python
      name: Check Python code compilation
      run: |
        find schemacrawler_ai_sqlserver_perf -name "*.py" -exec python -m py_compile {} \;
        echo "Python code compilation check passed"

    - id: poetry-build
      name: Build application with Poetry
      run: |
        poetry build
        echo "Poetry build completed successfully"

    - id: setup-buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - id: docker-login
      name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - id: meta
      name: Extract metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - id: build-push
      name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
